name: Deploy Java Application

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/a604-web/backend/webrtc

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: Create application properties from secret
        run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./application.properties
          
          echo "application-prod.properties has been created from secret."

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

#      - name: 📦 Cache Gradle dependencies
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-

      - name: 🔧 Make gradlew executable
        run: |
          chmod +x ./gradlew
          # QueryDSL 생성 파일들 완전 정리
          rm -rf build/generated
          rm -rf src/main/generated
          # Gradle 캐시도 정리
          rm -rf .gradle/caches/transforms*
          rm -rf .gradle/caches/*/generated-gradle-jars

      - name: 🔨 Build application
        run: |
          ./gradlew clean build -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/webrtc:latest

      - name: 🚀 Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |            
            docker rmi $(docker images -q)
            docker-compose pull
            docker-compose down || true
            docker-compose up -d
